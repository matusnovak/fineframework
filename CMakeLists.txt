cmake_minimum_required(VERSION 3.0)
project (fineframework)

if(MSVC)
else()
	include(CheckCXXCompilerFlag)
	CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
	if(COMPILER_SUPPORTS_CXX11)
		message(STATUS "${COMPILER_SUPPORTS_CXX11}")
	else(COMPILER_SUPPORTS_CXX11)
		message(FATAL_ERROR "${COMPILER_SUPPORTS_CXX11}")
	endif(COMPILER_SUPPORTS_CXX11)

	if (CMAKE_VERSION VERSION_LESS "3.1")
	  if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		set (CMAKE_CXX_FLAGS "--std=gnu++11 ${CMAKE_CXX_FLAGS}")
	  endif ()
	else ()
	  set (CMAKE_CXX_STANDARD 11)
	endif ()
	set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Select build type")
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "RelWithDebInfo" "MinSizeRel")
endif()

if(APPLE)
  include_directories(/usr/local/include)
  link_directories(/usr/local/lib)
elseif(UNIX)
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath -Wl,$ORIGIN")
endif()

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(CMAKE_DEBUG_POSTFIX _d CACHE STRING "Postfix added to debug version of the library")

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

option(BUILD_SHARED_LIBS "Build Shared Libraries" ON)
option(BUILD_MODULE_MATH "Build math module (Must stay ON!)" ON)
option(BUILD_MODULE_GRAPHICS "Build OpenGL graphics module" ON)
option(BUILD_MODULE_DATA "Build Data module" ON)
option(BUILD_MODULE_GUI "Build GUI module" ON)
option(BUILD_MODULE_MEDIA "Build Media module" ON)
option(BUILD_EXAMPLES "Build examples" ON)
option(BUILD_TESTS "Build tests" ON)
option(BUILD_INSTALL "Install library" ON)

if(APPLE)
  find_library(OPENGL_LIBRARY OpenGL)
  find_library(COCOA_LIBRARY Cocoa)
  find_library(IOKIT_LIBRARY IOKit)
  find_library(COREVIDEO_LIBRARY CoreVideo)
endif()

if(BUILD_TESTS)
  enable_testing ()
endif()

function(add_modulesubdirs MODULE)
  add_subdirectory(source/${MODULE})
  if(BUILD_EXAMPLES)
    add_subdirectory(examples/${MODULE})
  endif()
  if(BUILD_TESTS)
    add_subdirectory(tests/${MODULE})
  endif()
endfunction(add_modulesubdirs)

if(BUILD_MODULE_MATH)
  add_modulesubdirs(math)
endif()

if(BUILD_MODULE_GRAPHICS)
  add_modulesubdirs(graphics)
endif()

if(BUILD_MODULE_DATA)
  add_modulesubdirs(data)
endif()

if(BUILD_MODULE_GUI)
  add_modulesubdirs(gui)
endif()

if(BUILD_MODULE_MEDIA)
  add_modulesubdirs(media)
endif()

if (BUILD_INSTALL)
  install(DIRECTORY include/ffw DESTINATION include)
endif()