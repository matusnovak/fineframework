cmake_minimum_required(VERSION 3.0)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../include)
link_directories(${CMAKE_BINARY_DIR}/Debug)
link_directories(${CMAKE_BINARY_DIR}/Release)
link_directories(${CMAKE_BINARY_DIR})
include_directories(${EXTRA_LIBRARY_DIR}/include)
link_directories(${EXTRA_LIBRARY_DIR}/lib)

file(COPY FreeSans.ttf DESTINATION ${CMAKE_BINARY_DIR})
file(COPY FreeSans.ttf DESTINATION ${CMAKE_BINARY_DIR}/examples/graphics)
file(COPY ubuntu-mono-rgba8.raw DESTINATION ${CMAKE_BINARY_DIR})
file(COPY ubuntu-mono-rgba8.raw DESTINATION ${CMAKE_BINARY_DIR}/examples/graphics)
file(COPY grid-rgb8.raw DESTINATION ${CMAKE_BINARY_DIR})
file(COPY grid-rgb8.raw DESTINATION ${CMAKE_BINARY_DIR}/examples/graphics)

# All examples
add_executable(ExampleEmpty empty.cpp)
add_executable(ExampleTrueTypeFont truetypefont.cpp)
add_executable(ExampleBitmapFont bitmapfont.cpp)
add_executable(ExampleTextureSubsection texturesubsection.cpp)
add_executable(ExampleShapes shapes.cpp)
add_executable(ExampleCube cube.cpp)
add_executable(ExampleTree tree.cpp)

set(GRAPHICS_EXAMPLES ExampleEmpty ExampleTrueTypeFont ExampleBitmapFont ExampleTextureSubsection ExampleShapes ExampleCube ExampleTree)

# Dependencies
foreach(exmpl ${GRAPHICS_EXAMPLES})
  if(APPLE)
    #target_link_libraries(${exmpl})
    target_link_libraries(${exmpl} debug finegraphics${CMAKE_DEBUG_POSTFIX})
    target_link_libraries(${exmpl} optimized finegraphics )
  elseif(UNIX)
    target_link_libraries(${exmpl} GL X11 Xrandr Xi Xxf86vm Xcursor Xinerama)
    target_link_libraries(${exmpl} debug finegraphics${CMAKE_DEBUG_POSTFIX})
	target_link_libraries(${exmpl} optimized finegraphics )
  else()
    target_link_libraries(${exmpl} opengl32)
    target_link_libraries(${exmpl} debug finegraphics${CMAKE_DEBUG_POSTFIX})
	target_link_libraries(${exmpl} optimized finegraphics )
	if(MSVC)
	  set_target_properties(${exmpl} PROPERTIES LINK_FLAGS "/SUBSYSTEM:CONSOLE")
	endif()
  endif()
  
  # Compile with static stdlib ?
  if(STATIC_STDLIB)
    target_link_libraries(${exmpl} -static-libgcc -static-libstdc++)
  endif(STATIC_STDLIB)
endforeach(exmpl)